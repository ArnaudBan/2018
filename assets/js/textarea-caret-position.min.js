!function () { function e(e, i, n) { if (!o) throw new Error("textarea-caret-position#getCaretCoordinates should only be called in a browser"); var d = n && n.debug || !1; if (d) { var a = document.querySelector("#input-textarea-caret-position-mirror-div"); a && a.parentNode.removeChild(a) } var l = document.createElement("div"); l.id = "input-textarea-caret-position-mirror-div", document.body.appendChild(l); var p = l.style, h = window.getComputedStyle ? window.getComputedStyle(e) : e.currentStyle, f = "INPUT" === e.nodeName; p.whiteSpace = "pre-wrap", f || (p.wordWrap = "break-word"), p.position = "absolute", d || (p.visibility = "hidden"), t.forEach(function (e) { f && "lineHeight" === e ? p.lineHeight = h.height : p[e] = h[e] }), r ? e.scrollHeight > parseInt(h.height) && (p.overflowY = "scroll") : p.overflow = "hidden", l.textContent = e.value.substring(0, i), f && (l.textContent = l.textContent.replace(/\s/g, "Â ")); var s = document.createElement("span"); s.textContent = e.value.substring(i) || ".", l.appendChild(s); var u = { top: s.offsetTop + parseInt(h.borderTopWidth), left: s.offsetLeft + parseInt(h.borderLeftWidth), height: parseInt(h.lineHeight) }; return d ? s.style.backgroundColor = "#aaa" : document.body.removeChild(l), u } var t = ["direction", "boxSizing", "width", "height", "overflowX", "overflowY", "borderTopWidth", "borderRightWidth", "borderBottomWidth", "borderLeftWidth", "borderStyle", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "fontStyle", "fontVariant", "fontWeight", "fontStretch", "fontSize", "fontSizeAdjust", "lineHeight", "fontFamily", "textAlign", "textTransform", "textIndent", "textDecoration", "letterSpacing", "wordSpacing", "tabSize", "MozTabSize"], o = "undefined" != typeof window, r = o && null != window.mozInnerScreenX; "undefined" != typeof module && void 0 !== module.exports ? module.exports = e : o && (window.getCaretCoordinates = e) }();